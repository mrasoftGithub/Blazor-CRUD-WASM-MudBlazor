@page "/eigenaren"
@inject IConfiguration Configuration
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@using static MudBlazorMRA.Shared.EIGENAAR
@using static MudBlazorMRA.Shared.Fout

<div class="row">
    <div>
        <h3>Eigenaren</h3>
    </div>
    <div>
        &nbsp;<button class="btn btn-primary" @onclick="(() => EigenaarVoegToe())">Voeg Toe</button>
    </div>
</div>

<div>@resultaat</div>
<br />

@if (eigenaren == null)
{
    <p><em>Bezig met laden...</em></p>
}
else
{
    <MudDataGrid Items="@eigenaren"
             SortMode="SortMode.Multiple"
             Filterable="true" FilterMode="DataGridFilterMode.ColumnFilterRow"
             ColumnResizeMode="ResizeMode.Column"
             Hover="true"
             Striped="true"
             Bordered="true"
             Style="background-color:lightyellow">
        <Columns>
            <Column T="EIGENAAR" Field="ID" Sortable="false" />
            <Column T="EIGENAAR" Field="Omschrijving" />
            <Column T="EIGENAAR" Field="Regio" />
            <Column T="EIGENAAR" Filterable="false" Sortable="false">
                <CellTemplate>
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Edit" OnClick="(() => EigenaarMuteer(context.Item.ID))" />
                </CellTemplate>
            </Column>
            <Column T="EIGENAAR" Filterable="false" Sortable="false">
                <CellTemplate>
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Delete" OnClick="(() => EigenaarVerwijder(context.Item.ID))" />
                </CellTemplate>
            </Column>
        </Columns>
        <PagerContent><MudDataGridPager T="EIGENAAR" PageSizeOptions="new int[] {5}" /></PagerContent>
    </MudDataGrid>
}

@code {
    private EIGENAAR[]? eigenaren;
    string? resultaat = string.Empty;
    Fout? fout = new Fout();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Designed (returning deserialized objects directly),
            // it does not produce any HttpResponseMessage
            // eigenaren = await httpClient.GetFromJsonAsync<EIGENAAR[]>("/api/CRUD/HaalOpEigenaren");
            var opgehaald = await httpClient.GetAsync(Configuration["apiLocatie"] + "/HaalOpEigenaren");
            if (!opgehaald.IsSuccessStatusCode)
            {
                fout = await opgehaald.Content.ReadFromJsonAsync<Fout>();
                if (fout is not null)
                {
                    if (fout.Detail is not null)
                    {
                        resultaat = "De gegevens van de eigenaren kunnen niet opgehaald worden. " +
                            fout.Detail.ToString() + " (" + opgehaald.StatusCode + ")";
                    }
                }
            }
            else
            {
                eigenaren = await opgehaald.Content.ReadFromJsonAsync<EIGENAAR[]?>();
            }
        }
        catch (Exception e)
        {
            resultaat = e.Message;
        }
    }

    private void EigenaarVoegToe()
    {
        navigationManager.NavigateTo("/eigenaarvoegtoe");
    }

    private void EigenaarMuteer(int? ID)
    {
        navigationManager.NavigateTo("/eigenaarmuteer/" + ID);
    }

    private void EigenaarVerwijder(int? ID)
    {
        navigationManager.NavigateTo("/eigenaarverwijder/" + ID);
    }
}
